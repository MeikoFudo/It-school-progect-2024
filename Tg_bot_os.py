import logging
import random
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, filters
import pandas as pd

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

audio_dir = 'C:/Users/Ericka/Desktop/Oss_tg_bot/audio'
answers_dir = 'C:/Users/Ericka/Desktop/Oss_tg_bot/answers'
os.makedirs(answers_dir, exist_ok=True)

try:
    audio_data = pd.read_excel('C:/Users/Ericka/Desktop/Oss_tg_bot/audio.xlsx', header=None)[0].tolist()
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ —Å –∞—É–¥–∏–æ: {e}")
    audio_data = []

def create_keyboard():
    keyboard = [
        [InlineKeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –æ—Å–µ—Ç–∏–Ω—Å–∫–∏–π —è–∑—ã–∫", callback_data='support')],
        [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
    ]
    return InlineKeyboardMarkup(keyboard)

async def start(update: Update, context):
    reply_markup = create_keyboard()
    welcome_message = (
        "   üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞! üåü \n"
        "   –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–∏–Ω–∏-–¥–∏–∫—Ç–∞–Ω—Ç –∏ –ø–æ–º–æ—á—å –Ω–∞–º –≤—ã—è–≤–∏—Ç—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏, —á—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. ‚úçÔ∏è \n"
        "   –í–∞—à–∏ –¥–∏–∫—Ç–∞–Ω—Ç—ã –ø–æ–º–æ–≥—É—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã —è–∑—ã–∫–∞ —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è. üéì \n"
        "   –¢–∞–∫–∂–µ –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –∏–∑ —Å–∞–º–æ—É—á–∏—Ç–µ–ª—è –§.–ú. –¢–∞–∫–∞–∑–æ–≤–∞ '–°–∞–º–æ—É—á–∏—Ç–µ–ª—å –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞'. üî• \n"
        "   –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞! ü§ñ –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É —É–∂–µ —Å–µ–≥–æ–¥–Ω—è! \n"
        "   üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. üëã \n"
        "   –ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –≤—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –∏–∑—É—á–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ—Å–µ—Ç–∏–Ω—Å–∫–∏–π —è–∑—ã–∫. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π —è–∑—ã–∫–æ–≤–æ–π —Å–æ–æ–±—â–µ—Å—Ç–≤–∞! üåê"
    )
    await update.message.reply_text(welcome_message, reply_markup=reply_markup)

async def button(update: Update, context):
    query = update.callback_query
    await query.answer()

    if query.data == 'support':
        await support_ossetian_language(update, context)
    elif query.data == 'menu':
        await menu_command(update, context)

async def support_ossetian_language(update: Update, context):
    message_text = "–≠—Ç–æ –º–∏–Ω–∏-–¥–∏–∫—Ç–∞–Ω—Ç –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. üìù –ù–∞–ø–∏—à–∏—Ç–µ —Ç–æ, —á—Ç–æ —É—Å–ª—ã—à–∞–ª–∏ –≤ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏"
    reply_markup = create_keyboard()
    await update.callback_query.edit_message_text(text=message_text, reply_markup=reply_markup)

    await send_dictation(update, context)

async def send_dictation(update: Update, context):
    audio_files = os.listdir(audio_dir)
    if audio_files:
        audio_file = random.choice(audio_files)
        audio_number = audio_file.split('-')[0].strip()  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏
        audio_path = os.path.join(audio_dir, audio_file)
        await update.callback_query.message.reply_audio(audio=open(audio_path, 'rb'))
        context.user_data['current_audio_number'] = audio_number  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    else:
        await update.callback_query.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π.")

async def handle_message(update: Update, context):
    user_text = update.message.text
    user_id = update.message.from_user.id

    try:
        audio_number = context.user_data.get('current_audio_number', 'unknown')
        answers_files = os.listdir(answers_dir)
        next_file_number = len(answers_files) + 1
        text_file_path = os.path.join(answers_dir, f'answer_{next_file_number}_{audio_number}.txt')

        with open(text_file_path, 'w', encoding='utf-8') as f:
            f.write(user_text)

        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–≤–µ—Ç! –û–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def help_command(update: Update, context):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞! üåü \n"
        "   –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–∏–Ω–∏-–¥–∏–∫—Ç–∞–Ω—Ç –∏ –ø–æ–º–æ—á—å –Ω–∞–º –≤—ã—è–≤–∏—Ç—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏, —á—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. ‚úçÔ∏è \n"
        "   –í–∞—à–∏ –¥–∏–∫—Ç–∞–Ω—Ç—ã –ø–æ–º–æ–≥—É—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã —è–∑—ã–∫–∞ —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è. üéì "
        "   –¢–∞–∫–∂–µ –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –∏–∑ —Å–∞–º–æ—É—á–∏—Ç–µ–ª—è –§.–ú. –¢–∞–∫–∞–∑–æ–≤–∞ '–°–∞–º–æ—É—á–∏—Ç–µ–ª—å –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞'. üî• \n"
        "   –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞! ü§ñ –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–º—É —è–∑—ã–∫—É —É–∂–µ —Å–µ–≥–æ–¥–Ω—è! \n"
        "   üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. üëã \n"
        "   –ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –≤—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –∏–∑—É—á–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ—Å–µ—Ç–∏–Ω—Å–∫–∏–π —è–∑—ã–∫. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π —è–∑—ã–∫–æ–≤–æ–π —Å–æ–æ–±—â–µ—Å—Ç–≤–∞! üåê"
    )

async def menu_command(update: Update, context):
    commands_list = [
        "/start - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º",
        "/help - –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ"
    ]
    message_text = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" + "\n".join(commands_list)
    await update.callback_query.edit_message_text(text=message_text, reply_markup=create_keyboard())

def main():
    application = ApplicationBuilder().token("7207211232:AAGOGKdjH96gfdwGr64n5k2uP-R4JmdkMTc").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CallbackQueryHandler(button))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()

if __name__ == '__main__':
    main()
